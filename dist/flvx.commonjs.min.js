"use strict";Object.defineProperties(exports,{StoreController:{get:function(){return StoreController}},Store:{get:function(){return Store}},ViewController:{get:function(){return ViewController}},aggregator:{get:function(){return aggregator}},dispatcher:{get:function(){return dispatcher}},router:{get:function(){return router}},__esModule:{value:!0}});var storeController=Symbol(),viewController=Symbol(),StoreController=function(){};$traceurRuntime.createClass(StoreController,{trigger:function(){throw new Error('"trigger" must be implemented by a derived store controller')},render:function(){throw new Error('"render" must be implemented by a derived store controller')},onConnected:function(){},onDisconnected:function(){}},{});var Store=function(){};$traceurRuntime.createClass(Store,{trigger:function(){throw new Error('"trigger" must be implemented by a derived store')},render:function(){throw new Error('"render" must be implemented by a derived store')},onConnected:function(){},onDisconnected:function(){}},{});var ViewController=function(){};$traceurRuntime.createClass(ViewController,{render:function(){throw new Error('"render" must be implemented by a derived view controller')},onConnected:function(){},onDisconnected:function(){}},{});var Aggregator=function(){};$traceurRuntime.createClass(Aggregator,{update:function(){this[$traceurRuntime.toProperty(viewController)].render(this[$traceurRuntime.toProperty(storeController)].render())}},{});var aggregator=new Aggregator,Dispatcher=function(){};$traceurRuntime.createClass(Dispatcher,{trigger:function(r){this[$traceurRuntime.toProperty(storeController)].trigger(r)}},{});var dispatcher=new Dispatcher,routes=Symbol(),Router=function(){$traceurRuntime.setProperty(this,routes,{})};$traceurRuntime.createClass(Router,{registerRoute:function(r,e){if(!(e.storeController instanceof StoreController))throw new Error("Invalid store controller");if(!(e.viewController instanceof ViewController))throw new Error("Invalid view controller");$traceurRuntime.setProperty(this[$traceurRuntime.toProperty(routes)],r,e)},route:function(r){var e=this[$traceurRuntime.toProperty(routes)][$traceurRuntime.toProperty(r)];if(!e)throw new Error('Unknown route "'+r+'"');aggregator[$traceurRuntime.toProperty(storeController)]&&(aggregator[$traceurRuntime.toProperty(storeController)].onDisconnected(),aggregator[$traceurRuntime.toProperty(viewController)].onDisconnected()),$traceurRuntime.setProperty(aggregator,storeController,e.storeController),$traceurRuntime.setProperty(aggregator,viewController,e.viewController),$traceurRuntime.setProperty(dispatcher,storeController,e.storeController),e.viewController.onConnected(),e.storeController.onConnected()}},{});var router=new Router;